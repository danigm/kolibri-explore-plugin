[tox]
envlist = py{2.7,3.4,3.5,3.6,3.7,3.8,pypy}, pythonlint2, lint, node10.x, node, pythonbuild{2.7,3.4,3.5,3.6,3.7}

[testenv]
usedevelop = True
whitelist_externals=
    rm
    make
    sh
setenv =
    SKIP_PY_CHECK = 1
basepython =
    pythonbuild2.7: python2.7
    pythonbuild3.4: python3.4
    pythonbuild3.5: python3.5
    pythonbuild3.6: python3.6
    pythonbuild3.7: python3.7
    licenses: python2.7
    py2.7: python2.7
    py3.4: python3.4
    py3.5: python3.5
    py3.6: python3.6
    py3.7: python3.7
    py3.8: python3.8
    pypy: pypy
    pythonlint2: python2.7
    lint: python3.6
    node10.x: python2.7
deps =
    -r{toxinidir}/requirements.txt
commands =
    # Run the actual tests
    py.test {posargs:--cov=kolibri --cov-report= --cov-append --color=no}

[testenv:pythonlint2]
deps = flake8
commands =
    # Ensure we didn't put py3-only syntax
    flake8 kolibri_explore_plugin

[testenv:lint]
deps = pre-commit
commands =
    # Install yarn dependencies
    yarn
    # Node-sass gets mardy if we don't do this.
    npm rebuild node-sass
    pre-commit install -f --install-hooks
    pre-commit run --all-files

# [node_base]
# whitelist_externals =
#     yarn
#     npm
# commands =
#     yarn
#     # Node-sass gets mardy if we don't do this.
#     npm rebuild node-sass
#     yarn run coverage

# [testenv:node10.x]
# whitelist_externals = {[node_base]whitelist_externals}
# commands = {[node_base]commands}

[conditional_testing_base]
whitelist_externals =
    {toxinidir}/test/if.sh

[python_build_base]
commands =
    {toxinidir}/test/if.sh "setup_changed"

[testenv:pythonbuild2.7]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands = {[python_build_base]commands}

[testenv:pythonbuild3.4]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands = {[python_build_base]commands}

[testenv:pythonbuild3.5]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands = {[python_build_base]commands}

[testenv:pythonbuild3.6]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands = {[python_build_base]commands}

[testenv:licenses]
whitelist_externals = {[conditional_testing_base]whitelist_externals}
commands =
    {toxinidir}/test/if.sh "requirements_changed"
